{"data":{"allMdx":{"nodes":[{"tableOfContents":{"items":[{"url":"#tutorials","title":"Tutorials"}]},"excerpt":"Tutorials Learn how to write a service with Armeria by walking through this tutorial.\nThe tutorial takes you through steps based on a sample service, a blog service, to offer you practical guidance. Try running the service Before you dive into coding, try…","parent":{"sourceInstanceName":"tutorials","name":"index","relativeDirectory":""},"frontmatter":{"menuTitle":null,"order":null}},{"tableOfContents":{"items":[{"url":"#adding-documentation-service","title":"Adding Documentation service"}]},"excerpt":"Adding Documentation service Take advantage of Armeria's  Documentation service  which automatically creates documentation of your service methods, as well as providing means to test out the methods. Note that the Documentation service supports only unary…","parent":{"sourceInstanceName":"tutorials","name":"add-docservice","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Add Documentation service","order":7}},{"tableOfContents":{"items":[{"url":"#defining-a-blog-service-and-messages","title":"Defining a blog service and messages"}]},"excerpt":"Defining a blog service and messages Let's begin by defining our gRPC blog service in a proto file. 1. Create a proto file Create a file,  blog.proto  inside the directory,  {project_root}/src/main/proto . This tutorial uses  Protocol Buffers version 3 . …","parent":{"sourceInstanceName":"tutorials","name":"define-service","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Define service","order":1}},{"tableOfContents":{"items":[{"url":"#implementing-create-operation","title":"Implementing CREATE operation"}]},"excerpt":"Implementing CREATE operation Previously, we ran an empty blog service on a server and also confirmed that our client could make a call to the service. In this step, we'll implement a create operation and again, try making a call to a service method. What…","parent":{"sourceInstanceName":"tutorials","name":"implement-create","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Implement CREATE","order":3}},{"tableOfContents":{"items":[{"url":"#implementing-delete-operation","title":"Implementing DELETE operation"}]},"excerpt":"Implementing DELETE operation So far, we've created, read, and updated a blog post. Now, let's implement \nand make a call to finally delete a blog post. What you need You need to have the files obtained from previous steps: Java code generated Main.java B…","parent":{"sourceInstanceName":"tutorials","name":"implement-delete","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Implement DELETE","order":6}},{"tableOfContents":{"items":[{"url":"#implementing-read-operation","title":"Implementing READ operation"}]},"excerpt":"Implementing READ operation In the earlier step, we tried to create a blog post. In this step, we'll implement a read operation and make a call to read blog posts. We'll write two service methods, one for reading a single post and another for multiple pos…","parent":{"sourceInstanceName":"tutorials","name":"implement-read","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Implement READ","order":4}},{"tableOfContents":{"items":[{"url":"#implementing-update-operation","title":"Implementing UPDATE operation"}]},"excerpt":"Implementing UPDATE operation Previously, we created and read blog posts. Now, let's implement and make a call to update a blog post. Here, we'll throw a custom exception and add a GrpcExceptionHandler for handling. What you need You need to have the file…","parent":{"sourceInstanceName":"tutorials","name":"implement-update","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Implement UPDATE","order":5}},{"tableOfContents":{"items":[{"url":"#grpc-tutorial-introduction","title":"gRPC tutorial introduction"}]},"excerpt":"gRPC tutorial introduction Learn to build a gRPC service with Armeria by writing a blog service in gRPC. This tutorial is based on a  sample service , a minimal blog service, with which you can create, read, update, and delete blog posts. Before we get ou…","parent":{"sourceInstanceName":"tutorials","name":"index","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":null,"order":null}},{"tableOfContents":{"items":[{"url":"#test-running-a-service","title":"Test running a service"}]},"excerpt":"Test running a service In this step, we'll do three things with the code we obtained from our proto file; we'll create a server instance, add an empty gRPC service, and then lastly create a minimal client. What you need You need to have the  Java code gen…","parent":{"sourceInstanceName":"tutorials","name":"run-service","relativeDirectory":"grpc/blog"},"frontmatter":{"menuTitle":"Test run service","order":2}},{"tableOfContents":{"items":[{"url":"#adding-services-to-a-server","title":"Adding services to a server"}]},"excerpt":"Adding services to a server In this step, we'll add an empty blog service to the server we created in  Step 1. Create a server . Also, we'll add Armeria's  Documentation service  for testing our blog service. What you need No preparation is required for t…","parent":{"sourceInstanceName":"tutorials","name":"add-services-to-server","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Add services to a server","order":3}},{"tableOfContents":{"items":[{"url":"#creating-a-server","title":"Creating a server"}]},"excerpt":"Creating a server As the first step of the tutorial, we create a server instance and run a dummy service to check that the server and service are launched.\nWe'll use Armeria's  type://ServerBuilder  for this task. What you need No preparation is required …","parent":{"sourceInstanceName":"tutorials","name":"create-server","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Create a server","order":1}},{"tableOfContents":{"items":[{"url":"#implementing-create-operation","title":"Implementing CREATE operation"}]},"excerpt":"Implementing CREATE operation In this step, you'll write a service method for creating a blog post. By completing this step, you'll learn to map your service with the HTTP POST ( type://@Post ) method and make your own request converter ( type://@RequestC…","parent":{"sourceInstanceName":"tutorials","name":"implement-create","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Implement CREATE","order":4}},{"tableOfContents":{"items":[{"url":"#implementing-delete-operation","title":"Implementing DELETE operation"}]},"excerpt":"Implementing DELETE operation In this step, we'll write a method for deleting a blog post. By completing this step, you'll learn to map your service with the HTTP DELETE ( type://@Delete ) method, customize an exception handler, and use a blocking task ex…","parent":{"sourceInstanceName":"tutorials","name":"implement-delete","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Implement DELETE","order":7}},{"tableOfContents":{"items":[{"url":"#implementing-read-operation","title":"Implementing READ operation"}]},"excerpt":"Implementing READ operation In this step, we'll implement two methods at once. One is for retrieving a single post and another for multiple blog \nposts. By completing this step, you'll learn to map your service with the HTTP GET ( type://@Get ) method, us…","parent":{"sourceInstanceName":"tutorials","name":"implement-read","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Implement READ","order":5}},{"tableOfContents":{"items":[{"url":"#implementing-update-operation","title":"Implementing UPDATE operation"}]},"excerpt":"Implementing UPDATE operation In this step, you'll write a method for updating a blog post. By completing this step, you'll learn to map your service with the HTTP PUT ( type://@Put ) method, use parameter injection, and convert request body into a Java o…","parent":{"sourceInstanceName":"tutorials","name":"implement-update","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Implement UPDATE","order":6}},{"tableOfContents":{"items":[{"url":"#rest-tutorial-introduction","title":"REST tutorial introduction"}]},"excerpt":"REST tutorial introduction Using Armeria's annotations, you can build RESTful services on the go.\nThrough this tutorial, you'll learn to build a RESTful service with Armeria.\nIn particular, you'll be using these Armeria features: Service annotations Reque…","parent":{"sourceInstanceName":"tutorials","name":"index","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":null,"order":null}},{"tableOfContents":{"items":[{"url":"#preparing-a-data-object","title":"Preparing a data object"}]},"excerpt":"Preparing a data object Before we get into writing a blog service, first prepare a data object to contain blog post information. This object is used also in handling requests and sending responses. If you want a quick start, skip this step and copy off th…","parent":{"sourceInstanceName":"tutorials","name":"prepare-data-object","relativeDirectory":"rest/blog"},"frontmatter":{"menuTitle":"Prepare a data object","order":2}}]}}}