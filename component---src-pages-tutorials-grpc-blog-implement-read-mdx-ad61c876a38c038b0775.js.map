{"version":3,"file":"component---src-pages-tutorials-grpc-blog-implement-read-mdx-ad61c876a38c038b0775.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/tutorials/grpc/blog/implement-read.mdx","webpack://armeria-site/./src/layouts/tutorials.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/tutorials.tsx\";\nexport const pageTitle = \"Implementing READ operation\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TutorialSteps = makeShortcode(\"TutorialSteps\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst TabPane = makeShortcode(\"TabPane\");\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"implementing-read-operation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#implementing-read-operation\",\n        \"aria-label\": \"implementing read operation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing READ operation`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#what-you-need\"\n        }}>{`What you need`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#1-implement-server-side\"\n        }}>{`1. Implement server-side`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#2-implement-client-side\"\n        }}>{`2. Implement client-side`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#3-test-retrieving-multiple-posts\"\n        }}>{`3. Test retrieving multiple posts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#4-decorate-the-client\"\n        }}>{`4. Decorate the client`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#5-test-retrieving-a-single-post\"\n        }}>{`5. Test retrieving a single post`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#whats-next\"\n        }}>{`What's next`}</a></li>\n    </ul>\n    <p>{`In the earlier step, we tried to create a blog post. In this step, we'll implement a read operation and make a call to read blog posts. We'll write two service methods, one for reading a single post and another for multiple posts.`}</p>\n    <TutorialSteps current={4} mdxType=\"TutorialSteps\" />\n    <h2 {...{\n      \"id\": \"what-you-need\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-you-need\",\n        \"aria-label\": \"what you need permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What you need`}</h2>\n    <p>{`You need to have:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/tutorials/grpc/blog/define-service#compile-proto-file\"\n        }}>{`Java code generated`}</a></li>\n      <li parentName=\"ul\">{`Main.java`}</li>\n      <li parentName=\"ul\">{`BlogService.java`}</li>\n      <li parentName=\"ul\">{`BlogClient.java`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"1-implement-server-side\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#1-implement-server-side\",\n        \"aria-label\": \"1 implement server side permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`1. Implement server-side`}</h2>\n    <p>{`Let's write two methods for retrieving blog posts; one for a single post and\nanother for multiple posts.`}</p>\n    <Tabs mdxType=\"Tabs\">\n      <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`Add a service method in `}<inlineCode parentName=\"p\">{`BlogService.java`}</inlineCode>{` to retrieve a single post.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java\",\n            \"filename\": \"BlogService.java\"\n          }}>{`import example.armeria.blog.grpc.Blog.GetBlogPostRequest;\n\npublic final class BlogService extends BlogServiceGrpc.BlogServiceImplBase {\n\n  @Override\n  public void getBlogPost(GetBlogPostRequest request, StreamObserver<BlogPost> responseObserver) {\n    final BlogPost blogPost = blogPosts.get(request.getId());\n    if (blogPost == null) {\n      responseObserver.onError(\n        Status.NOT_FOUND.withDescription(\"The blog post does not exist. ID: \" + request.getId())\n                        .asRuntimeException());\n    } else {\n        responseObserver.onNext(blogPost);\n        responseObserver.onCompleted();\n    }\n  }\n}\n`}</code></pre>\n      </TabPane>\n      <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`Add a service method in `}<inlineCode parentName=\"p\">{`BlogService.java`}</inlineCode>{` to retrieve multiple posts.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java\",\n            \"filename\": \"BlogService.java\"\n          }}>{`import java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Map.Entry;\n\nimport example.armeria.blog.grpc.Blog.ListBlogPostsRequest;\nimport example.armeria.blog.grpc.Blog.ListBlogPostsResponse;\n\nfinal class BlogService extends BlogServiceGrpc.BlogServiceImplBase {\n  @Override\n  public void listBlogPosts(ListBlogPostsRequest request,\n                            StreamObserver<ListBlogPostsResponse> responseObserver) {\n      final Collection<BlogPost> blogPosts;\n      if (request.getDescending()) {\n          blogPosts = this.blogPosts.entrySet()\n                                    .stream()\n                                    .sorted(Collections.reverseOrder(Comparator.comparingInt(Entry::getKey)))\n                                    .map(Entry::getValue).collect(Collectors.toList());\n      } else {\n          blogPosts = this.blogPosts.values();\n      }\n      responseObserver.onNext(ListBlogPostsResponse.newBuilder().addAllBlogs(blogPosts).build());\n      responseObserver.onCompleted();\n  }\n}\n`}</code></pre>\n      </TabPane>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"2-implement-client-side\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#2-implement-client-side\",\n        \"aria-label\": \"2 implement client side permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`2. Implement client-side`}</h2>\n    <p>{`This time, we'll implement a client method for each corresponding server method.`}</p>\n  <Tabs mdxType=\"Tabs\">\n  <TabPane tab=\"Single post\" key=\"1\" mdxType=\"TabPane\">\n        <p>{`  Add a method in the `}<inlineCode parentName=\"p\">{`BlogClient.java`}</inlineCode>{` to retrieve a single post.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`import example.armeria.blog.grpc.Blog.GetBlogPostRequest;\n...\nstatic void getBlogPost(int id){\n  final BlogPost blogPost = client.getBlogPost(GetBlogPostRequest.newBuilder().setId(id).build());\n}\n`}</code></pre>\n  </TabPane>\n  <TabPane tab=\"Multiple posts\" key=\"2\" mdxType=\"TabPane\">\n        <p>{`  Add a method in the `}<inlineCode parentName=\"p\">{`BlogClient.java`}</inlineCode>{` to retrieve a list of posts.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`import example.armeria.blog.grpc.Blog.ListBlogPostsRequest;\nimport example.armeria.blog.grpc.Blog.ListBlogPostsResponse;\n\n...\nstatic void listBlogPosts() {\n  final ListBlogPostsResponse\n          response = client.listBlogPosts(ListBlogPostsRequest.newBuilder().setDescending(false).build());\n\n  final List<BlogPost> blogs = response.getBlogsList();\n}\n`}</code></pre>\n  </TabPane>\n  </Tabs>\n    <h2 {...{\n      \"id\": \"3-test-retrieving-multiple-posts\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#3-test-retrieving-multiple-posts\",\n        \"aria-label\": \"3 test retrieving multiple posts permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`3. Test retrieving multiple posts`}</h2>\n    <p>{`Let's start off with retrieving all the blog posts there are:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<inlineCode parentName=\"li\">{`listBlogPosts()`}</inlineCode>{` method in the test call.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`static void testRun() {\n  createBlogPost(\"Another blog post\", \"Creating a post via createBlogPost().\");\n  listBlogPosts();\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"/tutorials/grpc/blog/run-service#3-serve-the-service\"\n        }}>{`Re-run the server`}</a>{`. Your server is running if you see the following message.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`[armeria-boss-http-*:8080] INFO com.linecorp.armeria.server.Server - Serving HTTP at /[0:0:0:0:0:0:0:0]:8080 - http://127.0.0.1:8080/\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`Run the client.`}</li>\n    </ol>\n    <p>{`Since we haven't added any log messages, we can't tell if we've successfully retrieved blog posts or not. To check the result, we'll add in a decorator in the following step. Not only can we see the blog posts retrieved, we can obtain IDs to retrieve a post later on.`}</p>\n    <h2 {...{\n      \"id\": \"4-decorate-the-client\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#4-decorate-the-client\",\n        \"aria-label\": \"4 decorate the client permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`4. Decorate the client`}</h2>\n    <p>{`Retrieving a single blog post requires a post ID. We haven't saved any post ID returned by the server. (Although we very much know that our tutorial service issues incremental ID.). To check IDs, we'll decorate the client with Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"type://LoggingClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/logging/LoggingClient.html\"\n      }}>{`type://LoggingClient`}</a>{`. Likewise, you can decorate your service also. To decorate your service, use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://armeria.dev/docs/server-decorator\"\n      }}>{`server decorator`}</a>{` or annotate your gRPC stub class with `}<a parentName=\"p\" {...{\n        \"href\": \"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html\"\n      }}>{`type://@LoggingDecorator`}</a>{`.`}</p>\n    <Tip mdxType=\"Tip\">\n      <p>{`  Another option available is interceptor. See `}<a parentName=\"p\" {...{\n          \"href\": \"type://GrpcClientBuilder#intercept(Iterable):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/grpc/GrpcClientBuilder.html#intercept(java.lang.Iterable)\"\n        }}>{`type://GrpcClientBuilder#intercept(Iterable)`}</a>{` for information.`}</p>\n    </Tip>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a decorator to the client instance.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`import com.linecorp.armeria.client.logging.LoggingClient;\nimport com.linecorp.armeria.client.logging.LoggingClient;\n\nclass BlogClient {\n  public static void main(String[] args) throws Exception {\n    ...\n    client = GrpcClients.builder(\"http://127.0.0.1:8080/\")\n                        .decorator(LoggingClient.newDecorator())  // add this\n                        .build(BlogServiceBlockingStub.class);\n  }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set up log messages:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Add a dependency in the build.gradle file.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-groovy\",\n                \"metastring\": \"filename=build.gradle\",\n                \"filename\": \"build.gradle\"\n              }}>{`dependencies {\n  implementation 'ch.qos.logback:logback-classic:1.2.10'\n}\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Add the logback.xml file in the {project_root}/src/main/resources folder.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-xml\",\n                \"metastring\": \"filename=logback.xml\",\n                \"filename\": \"logback.xml\"\n              }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <root level=\"debug\">\n    <appender-ref ref=\"STDOUT\" />\n  </root>\n</configuration>\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Restart the server and run the client. If we succeed, we'll see an output like the following.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`[armeria-common-worker-nio-2-1] DEBUG c.l.a.client.logging.LoggingClient - [creqId=2f0fef66, chanId=0b350a6d, laddr=127.0.0.1:50824, raddr=127.0.0.1:8080][http://127.0.0.1:8080/example.armeria.blog.grpc.BlogService/ListBlogPosts#POST] Response: {startTime=2022-03-22T23:36:22.945Z(1645572982945000), length=99B, duration=516µs(516443ns), totalDuration=43986µs(43986061ns), headers=[:status=200, content-type=application/grpc+proto, grpc-encoding=identity, grpc-accept-encoding=gzip, server=Armeria/1.13.1-SNAPSHOT, date=Tue, 03 Feb 2022 23:36:22 GMT], content=CompletableRpcResponse{blogs {\n  title: \"My first blog\"\n  content: \"Yay\"\n  createdAt: 1645572982859\n  modifiedAt: 1645572982859\n}\nblogs {\n  id: 1\n  title: \"Another blog post\"\n  content: \"Creating a post via createBlogPost().\"\n  createdAt: 1645572982899\n  modifiedAt: 1645572982899\n}\n}, trailers=[EOS, grpc-status=0]}\n`}</code></pre>\n        <p parentName=\"li\">{`Now that we have the ID information, we can now retrieve a single post.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"5-test-retrieving-a-single-post\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#5-test-retrieving-a-single-post\",\n        \"aria-label\": \"5 test retrieving a single post permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`5. Test retrieving a single post`}</h2>\n    <p>{`Let's retrieve the second blog post. Apparently, the ID to use is `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Call the `}<inlineCode parentName=\"li\">{`getBlogPost()`}</inlineCode>{` method.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`static void testRun(){\n  createBlogPost(\"Another blog post\", \"Creating a post via createBlogPost().\");\n  listBlogPosts();  // feel free to comment this out or leave it\n  getBlogPost(1);   // add this\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`If you've stopped your server, run it again and then the client.\nBecause we haven't changed any code for creating blog posts, you'll be able to see the response for the `}<inlineCode parentName=\"li\">{`getBlogPost()`}</inlineCode>{` as below, whether you are re-running the server or not.\nWe have succeeded in reading a single blog post.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`[armeria-common-worker-nio-2-1] DEBUG c.l.a.client.logging.LoggingClient - [creqId=2f720d33, chanId=de1369e8, laddr=127.0.0.1:53868, raddr=127.0.0.1:8080][http://127.0.0.1:8080/example.armeria.blog.grpc.BlogService/GetBlogPost#POST] Response: {startTime=2022-02-23T02:22:50.689Z(1645582970689000), length=61B, duration=560µs(560871ns), totalDuration=6527µs(6527141ns), headers=[:status=200, content-type=application/grpc+proto, grpc-encoding=identity, grpc-accept-encoding=gzip, server=Armeria/1.13.1-SNAPSHOT, date=Wed, 23 Feb 2022 02:22:50 GMT], content=CompletableRpcResponse{id: 1\ntitle: \"Another blog post\"\ncontent: \"Creating a post via createBlogPost().\"\ncreatedAt: 1645572982899\nmodifiedAt: 1645572982899\n}, trailers=[EOS, grpc-status=0]}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`Check what happens if you retrieve a post that does not exist. Change the argument to 100 and run the client again.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogClient.java\",\n            \"filename\": \"BlogClient.java\"\n          }}>{`static void testRun() {\n  createBlogPost(\"Another blog post\", \"Creating a post via createBlogPost().\");\n  getBlogPost(100); // Set the argument to 100\n}\n`}</code></pre>\n        {`We can see that our `}<inlineCode parentName=\"li\">{`getBlogPost()`}</inlineCode>{` method returns the `}<inlineCode parentName=\"li\">{`NOT_FOUND`}</inlineCode>{` error as a runtime exception.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`Exception in thread \"main\" io.grpc.StatusRuntimeException: NOT_FOUND: The blog post does not exist. ID: 100\n  at io.grpc.stub.ClientCalls.toStatusRuntimeException(ClientCalls.java:262)\n  at io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:243)\n  at io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:156)\n  at example.armeria.blog.grpc.BlogServiceGrpc$BlogServiceBlockingStub.getBlogPost(BlogServiceGrpc.java:376)\n  at example.armeria.client.blog.grpc.BlogClient.getBlogPost(BlogClient.java:101)\n  at example.armeria.client.blog.grpc.BlogClient.testRun(BlogClient.java:52)\n  at example.armeria.client.blog.grpc.BlogClient.main(BlogClient.java:46)\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"whats-next\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#whats-next\",\n        \"aria-label\": \"whats next permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What's next`}</h2>\n    <p>{`Here, we've implemented service methods and client methods to retrieve blog posts. We have also added a decorator. See `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/client-decorator/\"\n      }}>{`Decorating a client`}</a>{` for more information. Next, we'll implement a method for `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/grpc/blog/implement-update\"\n      }}>{`updating a blog post`}</a>{` and add an exception handler.`}</p>\n    <TutorialSteps current={4} mdxType=\"TutorialSteps\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/tutorials/toc.json';\nimport MdxLayout from './mdx';\n\ninterface TutorialLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst TutorialLayout: React.FC<TutorialLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(\n        filter: { fileAbsolutePath: { glob: \"**/src/pages/tutorials/**\" } }\n      ) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n              relativeDirectory\n            }\n          }\n          frontmatter {\n            menuTitle\n            order\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"tutorials\"\n      menuTitle\n      pageTitleSuffix=\"Armeria tutorial\"\n    />\n  );\n};\n\nexport default TutorialLayout;\n"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","TutorialSteps","Tabs","TabPane","Tip","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","current","tab","key","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","menuTitle","pageTitleSuffix"],"sourceRoot":""}