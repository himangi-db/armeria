"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[3465],{71829:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return p},default:function(){return d},pageTitle:function(){return s}});var n,r=a(63366),l=(a(67294),a(64983)),i=a(89791),o=["components"],s="Implementing CREATE operation",p={},m=(n="TutorialSteps",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}),c={pageTitle:s,_frontmatter:p},g=i.Z;function d(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)(g,Object.assign({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"implementing-create-operation",style:{position:"relative"}},(0,l.kt)("a",{parentName:"h1",href:"#implementing-create-operation","aria-label":"implementing create operation permalink",className:"anchor before"},(0,l.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Implementing CREATE operation"),(0,l.kt)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#what-you-need"},"What you need")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1-implement-server-side"},"1. Implement server-side")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2-implement-client-side"},"2. Implement client-side")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#3-test-run"},"3. Test run")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#whats-next"},"What's next"))),(0,l.kt)("p",null,"Previously, we ran an empty blog service on a server and also confirmed that our client could make a call to the service. In this step, we'll implement a create operation and again, try making a call to a service method."),(0,l.kt)(m,{current:3,mdxType:"TutorialSteps"}),(0,l.kt)("h2",{id:"what-you-need",style:{position:"relative"}},(0,l.kt)("a",{parentName:"h2",href:"#what-you-need","aria-label":"what you need permalink",className:"anchor before"},(0,l.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What you need"),(0,l.kt)("p",null,"You need to have the following obtained from previous steps:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/tutorials/grpc/blog/define-service#compile-proto-file"},"Java code generated")),(0,l.kt)("li",{parentName:"ul"},"Main.java"),(0,l.kt)("li",{parentName:"ul"},"BlogService.java"),(0,l.kt)("li",{parentName:"ul"},"BlogClient.java")),(0,l.kt)("h2",{id:"1-implement-server-side",style:{position:"relative"}},(0,l.kt)("a",{parentName:"h2",href:"#1-implement-server-side","aria-label":"1 implement server side permalink",className:"anchor before"},(0,l.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"1. Implement server-side"),(0,l.kt)("p",null,"Let's implement a service method ",(0,l.kt)("inlineCode",{parentName:"p"},"createBlogPost()")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"BlogService.java"),"."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create an ID generator to issue temporary blog post IDs and a map to contain blogs posts. We have also added in a logger for debugging."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java",filename:"BlogService.java"},"import java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.atomic.AtomicInteger;\n\npublic final class BlogService extends BlogServiceGrpc.BlogServiceImplBase {\n  private final AtomicInteger idGenerator = new AtomicInteger();\n  private final Map<Integer, BlogPost> blogPosts = new ConcurrentHashMap<>();\n}\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Add a service method, ",(0,l.kt)("inlineCode",{parentName:"p"},"createBlogPost()"),":"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Create a ",(0,l.kt)("inlineCode",{parentName:"li"},"BlogPost")," object with request parameters."),(0,l.kt)("li",{parentName:"ol"},"Save the post information in the map."),(0,l.kt)("li",{parentName:"ol"},"Return the information of the blog post created.")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java",filename:"BlogService.java"},"import example.armeria.blog.grpc.Blog.BlogPost;\nimport io.grpc.stub.StreamObserver;\n\nfinal class BlogService extends BlogServiceGrpc.BlogServiceImplBase {\n  @Override\n  public void createBlogPost(CreateBlogPostRequest request, StreamObserver<BlogPost> responseObserver) {\n    final int id = idGenerator.getAndIncrement(); // Generate post ID\n    final Instant now = Instant.now();            // Get current time\n    final BlogPost updated = BlogPost.newBuilder()\n                                     .setId(id)\n                                     .setTitle(request.getTitle())\n                                     .setContent(request.getContent())\n                                     .setModifiedAt(now.toEpochMilli())\n                                     .setCreatedAt(now.toEpochMilli())\n                                     .build();\n    blogPosts.put(id, updated);\n    responseObserver.onNext(updated);\n    responseObserver.onCompleted();\n  }\n}\n")))),(0,l.kt)("h2",{id:"2-implement-client-side",style:{position:"relative"}},(0,l.kt)("a",{parentName:"h2",href:"#2-implement-client-side","aria-label":"2 implement client side permalink",className:"anchor before"},(0,l.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"2. Implement client-side"),(0,l.kt)("p",null,"This time, let's add a proper method for creating a blog post."),(0,l.kt)("p",null,"Add a method ",(0,l.kt)("inlineCode",{parentName:"p"},"createBlogPost()")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"BlogClient.java")," to send a request to create a blog post."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogClient.java",filename:"BlogClient.java"},'import org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nclass BlogClient {\n  private static final Logger logger = LoggerFactory.getLogger(BlogClient.class);\n  void createBlogPost(String title, String content) {\n    final CreateBlogPostRequest request = \n      CreateBlogPostRequest.newBuilder()\n                           .setTitle(title)\n                           .setContent(content)\n                           .build();\n    final BlogPost response = client.createBlogPost(request);\n    logger.info("[Create response] Title: {} Content: {}",\n                  response.getTitle(), response.getContent());\n  }\n}\n')),(0,l.kt)("h2",{id:"3-test-run",style:{position:"relative"}},(0,l.kt)("a",{parentName:"h2",href:"#3-test-run","aria-label":"3 test run permalink",className:"anchor before"},(0,l.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"3. Test run"),(0,l.kt)("p",null,"Now, let's make a call from the client. Note the code is minimal to keep things simple."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Add a method to test the create method we just implemented."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogClient.java",filename:"BlogClient.java"},'public static void main(String[] args) throws Exception {\n  ...\n  BlogClient blogClient = new BlogClient();\n  blogClient.testRun();\n}\n\nvoid testRun() {\n  createBlogPost("Another blog post", "Creating a post via createBlogPost().");\n}\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/tutorials/grpc/blog/run-service#3-serve-the-service"},"Re-run the server"),". Your server is running if you see the following message."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"[armeria-boss-http-*:8080] INFO com.linecorp.armeria.server.Server - Serving HTTP at /[0:0:0:0:0:0:0:0]:8080 - http://127.0.0.1:8080/\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run the client. You'll see only a single message for blog posting, because we haven't added logging for creating a post in the ",(0,l.kt)("inlineCode",{parentName:"p"},"main()")," method."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"[main] INFO  e.a.client.blog.grpc.BlogClient - [Create response] Title: Another blog post Content: Creating a post via createBlogPost().\n")))),(0,l.kt)("h2",{id:"whats-next",style:{position:"relative"}},(0,l.kt)("a",{parentName:"h2",href:"#whats-next","aria-label":"whats next permalink",className:"anchor before"},(0,l.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What's next"),(0,l.kt)("p",null,"Here, we've implemented a service method and client method for creating a blog post. Next, we'll ",(0,l.kt)("a",{parentName:"p",href:"/tutorials/grpc/blog/implement-read"},"implement a READ operation"),"."),(0,l.kt)(m,{current:3,mdxType:"TutorialSteps"}))}d.isMDXComponent=!0},89791:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(25444),r=a(67294),l=JSON.parse('{"root":["index"],"Useful links":{"User manual":"/docs","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"REST service":["rest/blog","rest/blog/create-server","rest/blog/prepare-data-object","rest/blog/add-services-to-server","rest/blog/implement-create","rest/blog/implement-read","rest/blog/implement-update","rest/blog/implement-delete"],"gRPC service":["grpc/blog","grpc/blog/define-service","grpc/blog/run-service","grpc/blog/implement-create","grpc/blog/implement-read","grpc/blog/implement-update","grpc/blog/implement-delete","grpc/blog/add-docservice"],"Thrift service":{"Coming soon":null}}'),i=a(46731),o=function(e){var t=(0,n.useStaticQuery)("3172452987").allMdx.nodes;return r.createElement(i.Z,Object.assign({},e,{candidateMdxNodes:t,index:l,prefix:"tutorials",menuTitle:!0,pageTitleSuffix:"Armeria tutorial"}))}}}]);
//# sourceMappingURL=component---src-pages-tutorials-grpc-blog-implement-create-mdx-32672caee52448e3bf5b.js.map