{"version":3,"file":"component---src-pages-docs-server-sse-mdx-fc9c98f206a81a596a6a.js","mappings":"qOAQsBA,E,6DAFTC,EAAY,6BACZC,EAAe,CAAC,EAKvBC,GAJgBH,EAII,MAJI,SAA6BI,GAEzD,OADAC,QAAQC,KAAK,aAAeN,EAAO,4EAC5B,cAASI,EAClB,GAEMG,EAAc,CAClBN,UAAAA,EACAC,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAG/B,IAFFC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,QAACI,EAAS,iBAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAI5E,cACE,GAAM,6BACN,MAAS,CACP,SAAY,cAEb,aAAGC,WAAW,KACb,KAAQ,8BACR,aAAc,uCACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVACa,+BAC1B,cACE,UAAa,gBACb,KAAQ,cAAY,sBAEtB,mBACE,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,kCAAgC,oCAG9C,QAACV,EAAG,CAACS,QAAQ,QACX,2BAAa,aAAGC,WAAW,IACvB,KAAQ,4CAA0C,oBACzB,uCAE/B,oHACG,aAAGA,WAAW,IACb,KAAQ,sCAAoC,sBACjB,qGAE/B,iEAAmD,aAAGA,WAAW,IAC7D,KAAQ,0JAAwJ,2BAChI,6KAEd,aAAGA,WAAW,IAChC,KAAQ,sCAAoC,sBACjB,MAC/B,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBAAe,s5BAmBhC,iDAAmC,aAAGA,WAAW,IAC7C,KAAQ,kKAAgK,+BACpI,uGACK,aAAGA,WAAW,IACvD,KAAQ,sCAAoC,sBACjB,8DAE/B,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBAAe,uYAYhC,cACE,GAAM,gCACN,MAAS,CACP,SAAY,cAEb,aAAGA,WAAW,KACb,KAAQ,iCACR,aAAc,0CACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVACa,kCAC1B,kTAEwE,sBAAYA,WAAW,KAAG,MAAoB,kSAGlF,aAAGA,WAAW,IAC9C,KAAQ,sCAAoC,sBACjB,yFAE/B,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBAAe,ymCAwBpC,CAEAH,EAAWI,gBAAiB,C,8uCC7H5B,EA/B8C,SAACV,GAC7C,IACmBW,GACfC,EAAAA,EAAAA,gBAAe,cADjBC,OAAUC,MAkBZ,OACE,gBAAC,IAAS,iBACJd,EAAK,CACTW,kBAAmBA,EACnBI,MAAOC,EACPC,OAAO,OACPC,gBAAgB,0BAGtB,C","sources":["webpack://armeria-site/./src/pages/docs/server-sse.mdx","webpack://armeria-site/./src/layouts/docs.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Serving Server-Sent Events\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"serving-server-sent-events\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#serving-server-sent-events\",\n        \"aria-label\": \"serving server sent events permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Serving Server-Sent Events`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#adjusting-the-request-timeout\"\n        }}>{`Adjusting the request timeout`}</a></li>\n    </ul>\n    <Tip mdxType=\"Tip\">\n      <p>{`Visit `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/line/armeria-examples\"\n        }}>{`armeria-examples`}</a>{` to find a fully working example.`}</p>\n    </Tip>\n    <p>{`A traditional web page has to send a request to the server in order to receive new data.\nWith `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/eventsource/\"\n      }}>{`Server-Sent Events`}</a>{`, however, it is possible for a server to push a new data to\nthe web page whenever it wants to.`}</p>\n    <p>{`Armeria provides several factory methods by `}<a parentName=\"p\" {...{\n        \"href\": \"type://ServerSentEvents:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/streaming/ServerSentEvents.html\"\n      }}>{`type://ServerSentEvents`}</a>{` class which help a user to easily send\nan event stream to the client. The following example shows how to build a server which serves services\nsending a response with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/eventsource/\"\n      }}>{`Server-Sent Events`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.sse.ServerSentEvent;\nimport com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.streaming.ServerSentEvents;\nimport reactor.core.publisher.Flux;\n\nServer server =\n        Server.builder()\n              // Emit Server-Sent Events with the SeverSentEvent instances published by a publisher.\n              .service(\"/sse1\",\n                       (ctx, req) -> ServerSentEvents.fromPublisher(\n                               Flux.just(ServerSentEvent.ofData(\"foo\"), ServerSentEvent.ofData(\"bar\"))))\n              // Emit Server-Sent Events with converting instances published by a publisher into\n              // ServerSentEvent instances.\n              .service(\"/sse2\",\n                       (ctx, req) -> ServerSentEvents.fromPublisher(\n                               Flux.just(\"foo\", \"bar\"), ServerSentEvent::ofData))\n              .build();\n`}</code></pre>\n    <p>{`Of course, Armeria provides `}<a parentName=\"p\" {...{\n        \"href\": \"type://@ProducesEventStream:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesEventStream.html\"\n      }}>{`type://@ProducesEventStream`}</a>{` annotation in order to convert the result objects\nreturned from an annotated service method into `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/eventsource/\"\n      }}>{`Server-Sent Events`}</a>{`.\nThe following example shows how to use the annotation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.sse.ServerSentEvent;\nimport com.linecorp.armeria.server.annotation.Get;\nimport com.linecorp.armeria.server.annotation.ProducesEventStream;\nimport org.reactivestreams.Publisher;\n\n@Get(\"/sse\")\n@ProducesEventStream\npublic Publisher<ServerSentEvent> sse() {\n    return Flux.just(ServerSentEvent.ofData(\"foo\"), ServerSentEvent.ofData(\"bar\"));\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adjusting-the-request-timeout\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#adjusting-the-request-timeout\",\n        \"aria-label\": \"adjusting the request timeout permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Adjusting the request timeout`}</h2>\n    <p>{`An event stream may be sent for a longer period than the configured timeout depending on the application.\nIt even can continue infinitely, for example streaming stock quotes. Such a long running stream may be\nterminated prematurely because Armeria has the default request timeout of `}<inlineCode parentName=\"p\">{`10`}</inlineCode>{` seconds, i.e. your stream\nwill be broken after 10 seconds at most. Therefore, you must adjust the timeout if your event stream lasts\nlonger than the configured timeout. The following example shows how to adjust the timeout of a single request.\nAs you might know, it is not only for `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/eventsource/\"\n      }}>{`Server-Sent Events`}</a>{`, so you can use this method for\nany requests which you want to adjust timeout for.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.time.Duration;\nimport com.linecorp.armeria.common.sse.ServerSentEvent;\nimport com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.streaming.ServerSentEvents;\nimport reactor.core.publisher.Flux;\n\nServer server =\n        Server.builder()\n              // This service infinitely sends numbers as the data of events every second.\n              .service(\"/long-sse\", (ctx, req) -> {\n                  // Note that you MUST adjust the request timeout if you want to send events for a\n                  // longer period than the configured request timeout. The timeout can be disabled by\n                  // setting 0 like the below, but it is NOT RECOMMENDED in the real world application,\n                  // because it can leave a lot of unfinished requests.\n                  ctx.setRequestTimeout(Duration.ZERO);\n                  return ServerSentEvents.fromPublisher(\n                          Flux.interval(Duration.ofSeconds(1))\n                              .map(sequence -> ServerSentEvent.ofData(Long.toString(sequence))));\n              })\n              .build();\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n"],"names":["name","pageTitle","_frontmatter","Tip","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","pageTitleSuffix"],"sourceRoot":""}