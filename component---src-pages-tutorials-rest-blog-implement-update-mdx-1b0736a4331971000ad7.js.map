{"version":3,"file":"component---src-pages-tutorials-rest-blog-implement-update-mdx-1b0736a4331971000ad7.js","mappings":"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","sources":["webpack://armeria-site/./src/pages/tutorials/rest/blog/implement-update.mdx","webpack://armeria-site/./src/layouts/tutorials.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/armeria/armeria/site/src/layouts/tutorials.tsx\";\nexport const pageTitle = \"Implementing UPDATE operation\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst TutorialSteps = makeShortcode(\"TutorialSteps\");\nconst Warning = makeShortcode(\"Warning\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"implementing-update-operation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#implementing-update-operation\",\n        \"aria-label\": \"implementing update operation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Implementing UPDATE operation`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#what-you-need\"\n          }}>{`What you need`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#1-map-http-method\"\n          }}>{`1. Map HTTP method`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#2-handle-parameters\"\n          }}>{`2. Handle parameters`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#3-implement-service-code\"\n          }}>{`3. Implement service code`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#4-return-response\"\n          }}>{`4. Return response`}</a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#return-error\"\n            }}>{`Return error`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#return-success\"\n            }}>{`Return success`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#5-test-updating-a-blog-post\"\n          }}>{`5. Test updating a blog post`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"#next-step\"\n          }}>{`Next step`}</a></p>\n      </li>\n    </ul>\n    <p>{`In this step, you'll write a method for updating a blog post. By completing this step, you'll learn to map your service with the HTTP PUT (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@Put:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Put.html\"\n      }}>{`type://@Put`}</a>{`) method, use parameter injection, and convert request body into a Java object using a request object (`}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n      }}>{`type://@RequestObject`}</a>{`).`}</p>\n    <TutorialSteps current={6} mdxType=\"TutorialSteps\" />\n    <h2 {...{\n      \"id\": \"what-you-need\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#what-you-need\",\n        \"aria-label\": \"what you need permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`What you need`}</h2>\n    <p>{`You must have the following files ready for updating a blog post. You can always `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/line/armeria-examples/blob/master/tutorials/rest-api-annotated-service/src/main/java/example/armeria/server/blog/\"\n      }}>{`download`}</a>{` the full version, instead of creating one yourself.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Main.java from `}<a parentName=\"li\" {...{\n          \"href\": \"/tutorials/rest/blog/create-server\"\n        }}>{`Step 1. Create a server`}</a></li>\n      <li parentName=\"ul\">{`BlogPost.java from `}<a parentName=\"li\" {...{\n          \"href\": \"/tutorials/rest/blog/prepare-data-object\"\n        }}>{`Step 2. Prepare a data object`}</a></li>\n      <li parentName=\"ul\">{`BlogService.java from `}<a parentName=\"li\" {...{\n          \"href\": \"/tutorials/rest/blog/add-services-to-server\"\n        }}>{`Step 3. Add services to a server`}</a></li>\n    </ul>\n    <Warning mdxType=\"Warning\">\n      <p>{`To test updating a blog post, you need to have blog posts created, which requires you to have the creation method implemented in the BlogService.java. See `}<a parentName=\"p\" {...{\n          \"href\": \"/tutorials/rest/blog/implement-create\"\n        }}>{`Step 4. Implement CREATE`}</a>{` for instructions.`}</p>\n    </Warning>\n    <h2 {...{\n      \"id\": \"1-map-http-method\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#1-map-http-method\",\n        \"aria-label\": \"1 map http method permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`1. Map HTTP method`}</h2>\n    <p>{`Let's start `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-annotated-service#mapping-http-service-methods\"\n      }}>{`mapping the HTTP PUT method`}</a>{` with our service method:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Declare a service method, `}<inlineCode parentName=\"li\">{`updateBlogPost()`}</inlineCode>{`, in the class `}<inlineCode parentName=\"li\">{`BlogService`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Map this service method with the HTTP PUT method by adding the `}<a parentName=\"li\" {...{\n          \"href\": \"type://@Put:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Put.html\"\n        }}>{`type://@Put`}</a>{` annotation.`}</li>\n      <li parentName=\"ol\">{`Bind the endpoint `}<inlineCode parentName=\"li\">{`/blogs`}</inlineCode>{` to the method.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java highlight=6\",\n        \"filename\": \"BlogService.java\",\n        \"highlight\": \"6\"\n      }}>{`import com.linecorp.armeria.server.annotation.Put;\n\npublic final class BlogService {\n  ...\n\n  @Put(\"/blogs\")\n  public void updateBlogPost(int id, BlogPost blogPost) {\n    // Update a blog post\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2-handle-parameters\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#2-handle-parameters\",\n        \"aria-label\": \"2 handle parameters permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`2. Handle parameters`}</h2>\n    <p>{`For updating a blog post, let's take a blog post ID (`}<inlineCode parentName=\"p\">{`id`}</inlineCode>{`) and new blog post information to update with. For `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/implement-create\"\n      }}>{`creating a blog post`}</a>{`, we've used Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"type://RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html\"\n      }}>{`type://RequestConverter`}</a>{` to convert a request body into a Java object. For a change, let's try using `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n      }}>{`type://@RequestObject`}</a>{` to convert a request body.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Take in the ID value as a path parameter by adding `}<inlineCode parentName=\"p\">{`/blogs/:id`}</inlineCode>{` to the `}<a parentName=\"p\" {...{\n            \"href\": \"type://@Put:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Put.html\"\n          }}>{`type://@Put`}</a>{` annotation.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/docs/server-annotated-service#parameter-injection\"\n          }}>{`Inject the path parameter`}</a>{` to the service method by annotating the parameter with `}<a parentName=\"p\" {...{\n            \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n          }}>{`type://@Param`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/docs/server-annotated-service#converting-an-http-request-to-a-java-object\"\n          }}>{`Convert request body`}</a>{` into a Java object by annotating the `}<inlineCode parentName=\"p\">{`BlogPost`}</inlineCode>{` parameter with `}<a parentName=\"p\" {...{\n            \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n          }}>{`type://@RequestObject`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogService.java\",\n            \"filename\": \"BlogService.java\"\n          }}>{`import com.linecorp.armeria.server.annotation.Param;\nimport com.linecorp.armeria.server.annotation.RequestObject;\n\npublic final class BlogService {\n  ...\n\n  // Instructions 1 to 3\n  @Put(\"/blogs/:id\")\n  public void updateBlogPost(@Param int id, @RequestObject BlogPost blogPost) {\n    // Update a blog post\n  }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`For conversion, annotate blog post constructor to map JSON object keys to blog post object members. You can find more information on `}<inlineCode parentName=\"p\">{`@JsonCreator`}</inlineCode>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.baeldung.com/jackson-annotations#1-jsoncreator\"\n          }}>{`here`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\",\n            \"metastring\": \"filename=BlogPost.java highlight=7-9\",\n            \"filename\": \"BlogPost.java\",\n            \"highlight\": \"7-9\"\n          }}>{`import com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic final class BlogPost {\n  ...\n\n  @JsonCreator\n  BlogPost(@JsonProperty(\"id\") int id, @JsonProperty(\"title\") String title,\n           @JsonProperty(\"content\") String content) {\n    ...\n  }\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"3-implement-service-code\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#3-implement-service-code\",\n        \"aria-label\": \"3 implement service code permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`3. Implement service code`}</h2>\n    <p>{`In this step, write the code required for service itself. You need to update the information contained in the `}<inlineCode parentName=\"p\">{`blogPosts`}</inlineCode>{` map. In real services, you'll be retrieving and updating the blog post information from and to a database.`}</p>\n    <p>{`To update a blog post, copy the following code inside the `}<inlineCode parentName=\"p\">{`updateBlogPost()`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java\",\n        \"filename\": \"BlogService.java\"\n      }}>{`  @Put(\"/blogs/:id\")\n  public void updateBlogPost(@Param int id, @RequestObject BlogPost blogPost) {\n    BlogPost oldBlogPost = blogPosts.get(id);\n    // Check if the given blog post exists\n    if (oldBlogPost == null) {\n      // Return a Not Found error. See the next section for instructions\n    }\n    BlogPost newBlogPost = new BlogPost(id, blogPost.getTitle(),\n                                        blogPost.getContent(),\n                                        oldBlogPost.getCreatedAt(),\n                                        blogPost.getCreatedAt());\n    blogPosts.put(id, newBlogPost); // Update the info in the map\n    ...\n  }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"4-return-response\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#4-return-response\",\n        \"aria-label\": \"4 return response permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`4. Return response`}</h2>\n    <p>{`Two possibilities are available for the response. If the blog post to update exists, we respond to the client that the update has been successful. The other response informs the client that the blog post doesn't exist.`}</p>\n    <h3 {...{\n      \"id\": \"return-error\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#return-error\",\n        \"aria-label\": \"return error permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Return error`}</h3>\n    <p>{`Let's return an error for the request to update a blog post that doesn't exist.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Replace the return type of the `}<inlineCode parentName=\"li\">{`updateBlogPost()`}</inlineCode>{` method from `}<inlineCode parentName=\"li\">{`void`}</inlineCode>{` to `}<a parentName=\"li\" {...{\n          \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n        }}>{`type://HttpResponse`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Return a response using Armeria's `}<a parentName=\"li\" {...{\n          \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n        }}>{`type://HttpResponse`}</a>{` containing `}<a parentName=\"li\" {...{\n          \"href\": \"type://HttpStatus#NOT_FOUND:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpStatus.html#NOT_FOUND\"\n        }}>{`type://HttpStatus#NOT_FOUND`}</a>{`.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java highlight=8,11\",\n        \"filename\": \"BlogService.java\",\n        \"highlight\": \"8,11\"\n      }}>{`import com.linecorp.armeria.common.HttpResponse;\nimport com.linecorp.armeria.common.HttpStatus;\n\npublic final class BlogService {\n  ...\n\n  @Put(\"/blogs/:id\")\n  public HttpResponse updateBlogPost(@Param int id, @RequestObject BlogPost blogPost) {\n    ...\n    if (oldBlogPost == null) {\n      return HttpResponse.of(HttpStatus.NOT_FOUND);\n    }\n    ...\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"return-success\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#return-success\",\n        \"aria-label\": \"return success permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Return success`}</h3>\n    <p>{`Let's return the information updated when the target blog post exists:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Replace the return type of the `}<inlineCode parentName=\"li\">{`updateBlogPost()`}</inlineCode>{` method from `}<inlineCode parentName=\"li\">{`void`}</inlineCode>{` to `}<a parentName=\"li\" {...{\n          \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n        }}>{`type://HttpResponse`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Return a response using Armeria's `}<a parentName=\"li\" {...{\n          \"href\": \"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html\"\n        }}>{`type://HttpResponse`}</a>{` containing the updated information of the post.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\",\n        \"metastring\": \"filename=BlogService.java highlight=7,9\",\n        \"filename\": \"BlogService.java\",\n        \"highlight\": \"7,9\"\n      }}>{`import com.linecorp.armeria.common.HttpResponse;\n\npublic final class BlogService {\n  ...\n\n  @Put(\"/blogs/:id\")\n  public HttpResponse updateBlogPost(@Param int id, @RequestObject BlogPost blogPost) {\n    ...\n    return HttpResponse.ofJson(newBlogPost);\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"5-test-updating-a-blog-post\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#5-test-updating-a-blog-post\",\n        \"aria-label\": \"5 test updating a blog post permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`5. Test updating a blog post`}</h2>\n    <p>{`Let's test updating a blog post.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the server like we did in `}<a parentName=\"p\" {...{\n            \"href\": \"/tutorials/rest/blog/create-server\"\n          }}>{`Step 1. Create a server`}</a>{` by running the `}<inlineCode parentName=\"p\">{`main()`}</inlineCode>{` method or using Gradle. When you see the message, \"Server has been started\", you can try testing service methods.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a couple of blog posts to test updating a blog post and get the ID value returned. Enter the cURL commands below.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ curl --request POST 'localhost:8080/blogs' \\\\\n-H 'Content-Type: application/json' \\\\\n-d '{\"title\":\"First post for testing\", \"content\":\"Test updating.\"}'\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ curl --request POST 'localhost:8080/blogs' \\\\\n-H 'Content-Type: application/json' \\\\\n-d '{\"title\":\"Second post for testing\", \"content\":\"Test updating a post.\"}'\n`}</code></pre>\n        <p parentName=\"li\">{`For each command, you'll get a response similar to the following.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`{\"id\":0,\"title\":\"First post for testing\",\"content\":\"Test updating.\",\"createdAt\":...,\"modifiedAt\":...}\n\n{\"id\":1,\"title\":\"Second post for testing\",\"content\":\"Test updating a post.\",\"createdAt\":...,\"modifiedAt\":...}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Let's update the second blog with the ID, `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{`. Change the value for the `}<inlineCode parentName=\"p\">{`\"title\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"content\"`}</inlineCode>{` properties.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ curl --request PUT 'localhost:8080/blogs/1' \\\\\n-H 'Content-Type: application/json' \\\\\n-d '{\n    \"title\": \"Update title to this title\",\n    \"content\": \"Update blog content with this content.\"\n}'\n`}</code></pre>\n        <p parentName=\"li\">{`You'll get a response similar to this. Not only the title and content are changed, but the last updated time (`}<inlineCode parentName=\"p\">{`modifiedAt`}</inlineCode>{`) is changed, too.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`{\"id\":1,\"title\":\"Update title to this title\",\"content\":\"Update blog content with this content.\",\"createdAt\":...,\n\"modifiedAt\":...}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Let's retrieve the same blog post to see if the change has been applied successfully.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ curl --request GET 'localhost:8080/blogs/1'\n`}</code></pre>\n        <p parentName=\"li\">{`The response we get confirms that the change is applied.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`{\n  \"id\": 1,\n  \"title\": \"Update title to this title\",\n  \"content\": \"Update blog content with this content.\",\n  \"createdAt\": ...,\n  \"modifiedAt\": ...\n}\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`You can test this also with Armeria's `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-docservice\"\n      }}>{`Documentation service`}</a>{`. See `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/add-services-to-server#using-docservice-after-adding-service-methods\"\n      }}>{`Using DocService after adding service methods`}</a>{` for instructions.`}</p>\n    <h2 {...{\n      \"id\": \"next-step\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#next-step\",\n        \"aria-label\": \"next step permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Next step`}</h2>\n    <p>{`In this step, we've implemented a method for an UPDATE operation and used Armeria's annotations; `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Put:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Put.html\"\n      }}>{`type://@Put`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html\"\n      }}>{`type://@Param`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html\"\n      }}>{`type://@RequestObject`}</a>{`.`}</p>\n    <p>{`Next, at `}<a parentName=\"p\" {...{\n        \"href\": \"/tutorials/rest/blog/implement-delete\"\n      }}>{`Step 7. Implement DELETE`}</a>{`, we'll implement a DELETE operation to delete\nblog posts.`}</p>\n    <TutorialSteps current={6} mdxType=\"TutorialSteps\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/tutorials/toc.json';\nimport MdxLayout from './mdx';\n\ninterface TutorialLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst TutorialLayout: React.FC<TutorialLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(\n        filter: { fileAbsolutePath: { glob: \"**/src/pages/tutorials/**\" } }\n      ) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n              relativeDirectory\n            }\n          }\n          frontmatter {\n            menuTitle\n            order\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"tutorials\"\n      menuTitle\n      pageTitleSuffix=\"Armeria tutorial\"\n    />\n  );\n};\n\nexport default TutorialLayout;\n"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","TutorialSteps","Warning","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","current","isMDXComponent","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","menuTitle","pageTitleSuffix"],"sourceRoot":""}